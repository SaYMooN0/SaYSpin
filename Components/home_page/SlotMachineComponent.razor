@code {
    [Parameter]
    public SlotMachine slotMachine { get; set; }

    private IEnumerable<BaseTileItem?> allItems;

    protected override void OnParametersSet()
    {
        allItems = slotMachine?.SingleDimensionTileItems() ?? Enumerable.Empty<BaseTileItem?>();
    }
    private string CalcGridStyle() =>
        $"grid-template-columns: repeat({slotMachine.ColumnsCount}, 1fr); grid-template-rows: repeat({slotMachine.RowsCount}, 1fr);";
    private string CalcTileItemsWidth()
    {
        int maxGridPart = Math.Max(slotMachine.ColumnsCount, slotMachine.RowsCount);
        return $"calc(25px + {18 / maxGridPart}vw + {10 / maxGridPart}vh - 2px * {maxGridPart})";
    }

        
}

<div class="slot-machine" style="@CalcGridStyle()">
    @if (allItems is not null)
    {
        @foreach (BaseTileItem? item in allItems)
        {
            <TileItemComponent tileItem="@item" tileWidth="@CalcTileItemsWidth()" />
        }
    }
    else
    {
        <h2>allItems are null</h2>
    }
</div>