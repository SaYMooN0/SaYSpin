@inject IJSRuntime JS
<div class="log-entry">
    <span class="log-icon @log.Type.ToString().ToLower()"></span>
    <span class="log-message">@((MarkupString)log.Message.Replace("\n", "<br>"))</span>
    <span class="log-date">@log.Time</span>
    <svg viewBox="0 0 448 512" class="svg-button" @onclick="CopyToClipboard">
        <path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z" />
    </svg>
    <svg viewBox="0 0 448 512" class="svg-button" @onclick="PasteTextIntoInput">
        <path d="M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z" />
    </svg>
    @if (showCopied)
    {
        <div class="info-popup unselectable">Copied</div>
    }
    @if (showPasted)
    {
        <div class="info-popup unselectable">Pasted</div>
    }

</div>

@code {
    [Parameter]
    public GameLogModel log { get; set; }
    [Parameter]
    public Action<string> pasteText { get; set; }

    private bool showCopied = false;
    private bool showPasted = false;

    private async Task CopyToClipboard()
    {
        await JS.InvokeVoidAsync("navigator.clipboard.writeText", log.Message);
        showCopied = true;
        StateHasChanged();
        await Task.Delay(2000);
        showCopied = false;
        StateHasChanged();
    }
    private async Task PasteTextIntoInput()
    {
        pasteText(log.Message);
        showPasted = true;
        StateHasChanged();
        await Task.Delay(2000);
        showPasted = false;
        StateHasChanged();
    }
}
